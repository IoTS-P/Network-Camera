From 6662825b7c0ce5baf2de5ec13269b67fa51f9298 Mon Sep 17 00:00:00 2001
From: Ruibo Lu <reaperlu@hust.edu.cn>
Date: Fri, 16 May 2025 18:13:02 +0800
Subject: [PATCH] [dns]: Port CVE-2017-14201 to newest zephyr

Signed-off-by: Ruibo Lu <reaperlu@hust.edu.cn>
---
 subsys/net/lib/shell/dns.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/subsys/net/lib/shell/dns.c b/subsys/net/lib/shell/dns.c
index 6c6285990d8..e8d8622c7bf 100644
--- a/subsys/net/lib/shell/dns.c
+++ b/subsys/net/lib/shell/dns.c
@@ -18,9 +18,12 @@ static void dns_result_cb(enum dns_resolve_status status,
 			  struct dns_addrinfo *info,
 			  void *user_data)
 {
-	const struct shell *sh = user_data;
+	struct net_shell_user_data *data = user_data;
+	const struct shell *sh = data->sh;
+	bool *first = data->user_data;
 
 	if (status == DNS_EAI_CANCELED) {
+		*first = false;
 		PR_WARNING("dns: Timeout while resolving name.\n");
 		return;
 	}
@@ -28,6 +31,11 @@ static void dns_result_cb(enum dns_resolve_status status,
 	if (status == DNS_EAI_INPROGRESS && info) {
 		char addr[NET_IPV6_ADDR_LEN];
 
+		if (*first) {
+			PR("\n");
+			*first = false;
+		}
+
 		if (info->ai_family == AF_INET) {
 			net_addr_ntop(AF_INET,
 				      &net_sin(&info->ai_addr)->sin_addr,
@@ -49,11 +57,13 @@ static void dns_result_cb(enum dns_resolve_status status,
 
 	if (status == DNS_EAI_ALLDONE) {
 		PR("dns: All results received\n");
+		*first = false;
 		return;
 	}
 
 	if (status == DNS_EAI_FAIL) {
 		PR_WARNING("dns: No such name found.\n");
+		*first = false;
 		return;
 	}
 
@@ -184,8 +194,10 @@ static int cmd_net_dns_query(const struct shell *sh, size_t argc, char *argv[])
 
 #if defined(CONFIG_DNS_RESOLVER)
 #define DNS_TIMEOUT (MSEC_PER_SEC * 2) /* ms */
+	struct net_shell_user_data user_data;
 	enum dns_query_type qtype = DNS_QUERY_TYPE_A;
 	char *host, *type = NULL;
+	bool first = true;
 	int ret, arg = 1;
 
 	host = argv[arg++];
@@ -212,8 +224,11 @@ static int cmd_net_dns_query(const struct shell *sh, size_t argc, char *argv[])
 		}
 	}
 
+	user_data.sh = sh;
+	user_data.user_data = &first;
+
 	ret = dns_get_addr_info(host, qtype, NULL, dns_result_cb,
-				(void *)sh, DNS_TIMEOUT);
+				(void *)&user_data, DNS_TIMEOUT);
 	if (ret < 0) {
 		PR_WARNING("Cannot resolve '%s' (%d)\n", host, ret);
 	} else {
-- 
2.49.0

